{"version":3,"sources":["components/MyModal/MyModal.module.css","components/UI/button/MyButton.module.css","components/UI/input/MyInput.module.css","components/UI/Loader/Loader.module.css","context/index.js","components/UI/button/MyButton.jsx","components/UI/Navbar/Navbar.jsx","pages/About.jsx","API/PostService.js","hooks/usePosts.js","hooks/useFetching.js","utils/pages.js","components/UI/input/MyInput.jsx","components/PostForm.jsx","components/select/MySelect.jsx","components/PostFilter.jsx","components/PostItem.jsx","components/PostList.jsx","components/UI/Loader/Loader.jsx","components/MyModal/MyModal.jsx","components/pagination/Pagination.jsx","pages/Posts.jsx","hooks/useObserver.js","pages/PostPageId.jsx","router/index.js","pages/Login.jsx","components/AppRouter.jsx","App.js","index.js"],"names":["module","exports","AuthContext","createContext","MyButton","children","props","className","classes","myBtn","Navbar","setIsAuth","useContext","onClick","localStorage","removeItem","to","About","PostService","limit","page","axios","get","params","_limit","_page","response","id","usePosts","posts","sort","query","sortedPosts","useMemo","a","b","localeCompare","useSortedPosts","filter","post","title","toLowerCase","includes","toLocaleLowerCase","useFetching","callback","useState","isLoading","setIsLoading","error","setError","fetching","message","getPageCount","totalCount","Math","ceil","MyInput","React","forwardRef","ref","myInput","PostForm","create","body","setPost","value","onChange","e","target","type","placeholder","preventDefault","newPost","Date","now","MySelect","options","defaultValue","event","disabled","map","option","name","PostFilter","setFilter","selectedSort","PostItem","router","useHistory","push","remove","PostList","length","style","textAlign","TransitionGroup","index","CSSTransition","timeout","classNames","number","Loader","loader","MyModal","visible","setVisible","rootClasses","myModal","active","join","myModalContent","stopPropagation","Pagination","totalPages","changePage","pagesArray","result","i","getPagesArray","p","Posts","setPosts","modal","setModal","setTotalPages","setLimit","setPage","sortedAndSearchedPosts","lastElement","useRef","getAll","data","headers","fetchPosts","isPostsLoading","postError","canLoad","observer","useEffect","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","useObserver","marginTop","margin","height","display","justifyContent","PostPageId","useParams","comments","setComments","getById","fetchPostById","getCommentsByPostId","fetchComments","isComLoading","comm","email","privateRoutes","path","component","exact","publicRoutes","isAuth","onSubmit","setItem","AppRouter","route","App","setLoading","getItem","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82db07dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myModal\":\"MyModal_myModal__11u6T\",\"myModalContent\":\"MyModal_myModalContent__2YXle\",\"active\":\"MyModal_active__2x_DT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myBtn\":\"MyButton_myBtn__1Lwfo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myInput\":\"MyInput_myInput__2TTYQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__4xCn3\",\"rotate\":\"Loader_rotate__3ikWC\"};","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext(null);","import React from \"react\";\r\nimport classes from \"./MyButton.module.css\";\r\n\r\nconst MyButton = ({children, ...props}) =>{\r\n  return  (\r\n    <button {...props} className= {classes.myBtn}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default MyButton;","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../../../context';\r\nimport MyButton from '../button/MyButton';\r\n\r\nconst Navbar = () => {\r\n  const { setIsAuth} = useContext(AuthContext);\r\n\r\n  const logout = () => {\r\n    setIsAuth(false)\r\n    localStorage.removeItem('auth')\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <MyButton onClick={logout}>\r\n        Выйти</MyButton>\r\n      <div className=\"navbar__links\">\r\n      <Link className=\"navbar__link\" to=\"/about\">О сайте</Link>\r\n      <Link className=\"navbar__link\" to=\"/posts\">Новости</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n  \r\n      <h1>Пет проект</h1>\r\n    \r\n  );\r\n};\r\n\r\nexport default About;","import axios from \"axios\";\r\n\r\nexport default class PostService {\r\n  static async getAll(limit= 10, page= 1) {\r\n      const response = await axios.get('https://jsonplaceholder.typicode.com/posts',  {\r\n        params: {\r\n          _limit: limit,\r\n          _page: page\r\n        }\r\n      })\r\n      return response\r\n  }\r\n\r\n    static async getById(id) {\r\n      const response = await axios.get('https://jsonplaceholder.typicode.com/posts/' + id)    \r\n      return response;\r\n  }\r\n\r\n  static async getCommentsByPostId(id) {\r\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}/comments`)    \r\n    return response;\r\n  }\r\n}","import {useMemo} from \"react\";\r\n\r\n\r\nexport const useSortedPosts = (posts, sort) => {\r\n  const sortedPosts = useMemo(() => {\r\n    if(sort) {\r\n      return [...posts].sort((a, b) => a[sort].localeCompare(b[sort]))\r\n    }\r\n    return posts;\r\n  }, [sort, posts])\r\n\r\n  return sortedPosts;\r\n}\r\n\r\nexport const usePosts = (posts, sort, query) => {\r\n  const sortedPosts = useSortedPosts(posts, sort);\r\n\r\n  const sortedAndSearchedPosts = useMemo(() => {\r\n    return sortedPosts.filter(post => post.title.toLowerCase().includes(query.toLocaleLowerCase()))\r\n  }, [query, sortedPosts])\r\n\r\n  return sortedAndSearchedPosts;\r\n}","import {useState} from \"react\";\r\n\r\n\r\nexport const useFetching = (callback) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const fetching = async (...args) => {\r\n     try {\r\n      setIsLoading(true)\r\n      await callback(...args)\r\n    }\r\n      catch (e) {\r\n      setError(e.message);\r\n    }\r\n     finally {\r\n       setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return [fetching, isLoading, error];\r\n}\r\n\r\n","export const getPageCount = (totalCount, limit) => {\r\n  return Math.ceil(totalCount / limit)\r\n}\r\n\r\nexport const getPagesArray = (totalPages) => {\r\n  let result = [];\r\n  for(let i = 0; i < totalPages; i++)\r\n  {\r\n    result.push(i + 1);\r\n  }\r\n  return result;\r\n}","import React from \"react\";\r\nimport classes from \"./MyInput.module.css\";\r\n\r\nconst MyInput = React.forwardRef((props, ref) => {\r\n  return (\r\n      <input ref={ref} className={classes.myInput} {...props}/>\r\n  );\r\n});\r\n\r\nexport default MyInput;","import React, {useState} from 'react';\r\nimport MyInput from \"./UI/input/MyInput\";\r\nimport MyButton from \"./UI/button/MyButton\";\r\n\r\n\r\nconst PostForm = ({create}) => {\r\n  const [post, setPost] = useState({title: '', body: ''})\r\n\r\n  const addNewPost = (e) => {\r\n    e.preventDefault()\r\n    const newPost = {\r\n      ...post, id: Date.now()\r\n    }\r\n    create(newPost)\r\n    setPost({title: '', body: ''})\r\n  }\r\n\r\n\r\n  return (\r\n       <form>\r\n        <MyInput\r\n          value={post.title}\r\n          onChange={e => setPost({...post, title: e.target.value})}\r\n          type=\"text\" \r\n          placeholder=\"Название поста\"\r\n          />\r\n         <MyInput \r\n        value={post.body}\r\n        onChange={e => setPost({...post, body: e.target.value})}\r\n        type=\"text\" \r\n        placeholder=\"Описание поста\"\r\n        /> \r\n        <MyButton onClick={addNewPost}>Создать пост</MyButton>\r\n      </form>\r\n    \r\n  );\r\n};\r\n\r\nexport default PostForm;","import React from 'react';\r\n\r\nconst MySelect = ({options, defaultValue, value, onChange}) => {\r\n  return (\r\n    <select \r\n      value={value}\r\n      onChange={event => onChange(event.target.value)}\r\n    >\r\n      <option disabled value=\"\">{defaultValue}</option>\r\n      {options.map(option => \r\n         <option key={option.value} value={option.value}>\r\n           {option.name}\r\n         </option>\r\n         )}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default MySelect;","import React from 'react';\r\nimport MySelect from \"./select/MySelect\";\r\nimport MyInput from \"./UI/input/MyInput\";\r\n\r\nconst PostFilter = ({filter, setFilter}) => {\r\n  return (\r\n    <div>\r\n       <MyInput\r\n          value={filter.query}\r\n          onChange={e => setFilter({...filter, query: e.target.value})}\r\n          placeholder=\"Поиск...\"\r\n        />\r\n        <MySelect\r\n          value={filter.sort}\r\n          onChange={selectedSort => setFilter({...filter, sort: selectedSort})}\r\n          defaultValue=\"Сортировка\"\r\n          options={[\r\n            {value: \"title\", name: \"По названию\"},\r\n            {value: \"body\", name: \"По описанию\"},\r\n          ]}\r\n        />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostFilter;","import React from \"react\";\r\nimport MyButton from \"./UI/button/MyButton\";\r\nimport { useHistory } from \"react-router-dom\"; \r\n\r\n\r\nconst PostItem = (props) => {\r\n  const router = useHistory()\r\n    \r\n  return (\r\n      <div className=\"post\">\r\n          <div className=\"post__content\">\r\n              <strong>{props.post.id}. {props.post.title}</strong>\r\n              <div>\r\n                  {props.post.body}\r\n              </div>\r\n          </div>\r\n          <div className=\"post__btns\">\r\n              <MyButton onClick={() => router.push(`/posts/${props.post.id}`)}>\r\n                  Открыть\r\n              </MyButton>\r\n              <MyButton onClick={() => props.remove(props.post)}>\r\n                  Удалить\r\n              </MyButton>\r\n          </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default PostItem;","import React from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport PostItem from \"./PostItem\";\r\n\r\nconst PostList = ({posts, title, remove}) => {\r\n\r\n  if(!posts.length) {\r\n    return (\r\n      <h1 style={{textAlign: \"center\"}}>\r\n          Посты не найдены\r\n      </h1>\r\n    )}\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{textAlign: \"center\"}}>\r\n        {title}\r\n        </h1>\r\n        <TransitionGroup>\r\n        {posts.map((post, index) =>\r\n           <CSSTransition \r\n                key={post.id} \r\n                timeout={500} \r\n                classNames=\"post\">\r\n                <PostItem remove={remove} number={index + 1} post={post}/>\r\n          </CSSTransition>\r\n         )}\r\n        </TransitionGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostList;","import React from 'react';\r\nimport classes from \"./Loader.module.css\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className={classes.loader} >\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;","import React from 'react';\r\nimport classes from \"./MyModal.module.css\";\r\n\r\nconst MyModal = ({children, visible, setVisible}) => {\r\n\r\n  const rootClasses =[classes.myModal]\r\n  if(visible) {\r\n    rootClasses.push(classes.active);\r\n  }\r\n\r\n  return (\r\n    <div className={rootClasses.join(' ')} onClick={()=> setVisible(false)}>\r\n      <div className={classes.myModalContent} onClick={(e) => e.stopPropagation()}>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyModal;","import React from 'react';\r\nimport { getPagesArray } from '../../utils/pages';\r\n\r\nconst Pagination = ({totalPages, page, changePage}) => {\r\n  let pagesArray = getPagesArray(totalPages);\r\n  return (\r\n      <div className=\"page__wrapper\">\r\n          {pagesArray.map(p =>\r\n              <span\r\n                  onClick={() => changePage(p)}\r\n                  key={p}\r\n                  className={page === p ? 'page page__current' : 'page'}\r\n              >\r\n                      {p}\r\n                  </span>\r\n          )}\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import React, {useState, useEffect, useRef } from \"react\";\r\nimport PostService from \"../API/PostService\";\r\nimport { usePosts } from \"../hooks/usePosts\";\r\nimport { useFetching } from \"../hooks/useFetching\";\r\nimport { getPageCount } from \"../utils/pages\";\r\nimport MyButton from \"../components/UI/button/MyButton\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport PostFilter from \"../components/PostFilter\";\r\nimport PostList from \"../components/PostList\";\r\nimport Loader from \"../components/UI/Loader/Loader\";\r\nimport MyModal from \"../components/MyModal/MyModal\";\r\nimport Pagination from \"../components/pagination/Pagination\";\r\nimport { useObserver } from \"../hooks/useObserver\";\r\nimport MySelect from \"../components/select/MySelect\";\r\n\r\n\r\nfunction Posts() {\r\n  const [posts, setPosts] = useState([])\r\n  const [filter, setFilter] = useState({sort: '', query: ''})\r\n  const [modal, setModal] = useState(false);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\r\n  const lastElement = useRef()\r\n\r\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async (limit, page) => {\r\n      const response = await PostService.getAll(limit, page);\r\n      setPosts([...posts, ...response.data])\r\n      const totalCount = response.headers['x-total-count']\r\n      setTotalPages(getPageCount(totalCount, limit));\r\n  })\r\n\r\n  useObserver(lastElement, page < totalPages, isPostsLoading, () => {\r\n      setPage(page + 1);\r\n  })\r\n\r\n  useEffect(() => {\r\n      fetchPosts(limit, page)\r\n  }, [page, limit])\r\n\r\n  const createPost = (newPost) => {\r\n      setPosts([...posts, newPost])\r\n      setModal(false)\r\n  }\r\n\r\n  // Получаем post из дочернего компонента\r\n  const removePost = (post) => {\r\n      setPosts(posts.filter(p => p.id !== post.id))\r\n  }\r\n\r\n  const changePage = (page) => {\r\n      setPage(page)\r\n  }\r\n\r\n  return (\r\n      <div className=\"App\">\r\n          <MyButton style={{marginTop: 30}} onClick={() => setModal(true)}>\r\n              Создать пользователя\r\n          </MyButton>\r\n          <MyModal visible={modal} setVisible={setModal}>\r\n              <PostForm create={createPost}/>\r\n          </MyModal>\r\n          <hr style={{margin: '15px 0'}}/>\r\n          <PostFilter\r\n              filter={filter}\r\n              setFilter={setFilter}\r\n          />\r\n          <MySelect\r\n              value={limit}\r\n              onChange={value => setLimit(value)}\r\n              defaultValue=\"Кол-во элементов на странице\"\r\n              options={[\r\n                  {value: 5, name: '5'},\r\n                  {value: 10, name: '10'},\r\n                  {value: 25, name: '25'},\r\n                  {value: -1, name: 'Показать все'},\r\n              ]}\r\n          />\r\n          {postError &&\r\n          <h1>Произошла ошибка ${postError}</h1>\r\n          }\r\n          <PostList remove={removePost} posts={sortedAndSearchedPosts} title=\"Посты про JS\"/>\r\n          <div ref={lastElement} style={{height: 20}}/>\r\n          {isPostsLoading &&\r\n          <div style={{display: 'flex', justifyContent: 'center', marginTop: 50}}><Loader/></div>\r\n          }\r\n          <Pagination\r\n              page={page}\r\n              changePage={changePage}\r\n              totalPages={totalPages}\r\n          />\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Posts;\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useObserver = (ref, canLoad, isLoading,  callback) => {\r\n  const observer = useRef();\r\n\r\n  useEffect(() => {\r\n    if(isLoading) return; \r\n    if(observer.current) observer.current.disconnect();\r\n\r\n    var cb = function(entries, observer) {\r\n       if (entries[0].isIntersecting && canLoad) {\r\n        callback()\r\n       }\r\n    };\r\n    \r\n     observer.current = new IntersectionObserver(cb);\r\n     observer.current.observe(ref.current)\r\n    }, [isLoading])\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport PostService from '../API/PostService';\r\nimport { useFetching } from '../hooks/useFetching';\r\nimport Loader from \"../components/UI/Loader/Loader\"\r\n\r\n\r\nconst PostPageId = () => {\r\n  const params = useParams();\r\n  const [post, setPost] = useState({});\r\n  const [comments, setComments] = useState([]);\r\n  const [fetchPostById, isLoading] = useFetching(async (id) => {\r\n    const response = await PostService.getById(id);\r\n    setPost(response.data);\r\n  })\r\n\r\n  const [fetchComments, isComLoading] = useFetching(async (id) => {\r\n    const response = await PostService.getCommentsByPostId(id);\r\n    setComments(response.data);\r\n  })\r\n\r\n  useEffect(() => {\r\n    fetchPostById(params.id)\r\n    fetchComments(params.id)\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <h1>Вы открыли страницу поста с ID = {params.id}</h1>\r\n      {isLoading\r\n        ? <Loader/>\r\n        : <div>{post.id}. {post.title}</div>\r\n        }  \r\n        <h1>Комментарии</h1>\r\n        {isComLoading\r\n          ? <Loader/>\r\n          :<div>\r\n            {comments.map(comm => \r\n              <div key={comm.id} className=\"comments\">\r\n                <h5>{comm.email}</h5>\r\n                <div>{comm.body}</div>\r\n              </div>\r\n            )} \r\n          </div>\r\n        }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostPageId;","import About from '../pages/About';\r\nimport Posts from '../pages/Posts';\r\nimport PostPageId from '../pages/PostPageId';\r\nimport Login from '../pages/Login';\r\n\r\n\r\nexport const privateRoutes  = [\r\n  {path:'/about', component: About, exact: true},\r\n  {path:'/posts', component: Posts, exact: true},\r\n  {path:'/posts/:id', component: PostPageId, exact: true},\r\n]\r\n\r\nexport const publicRoutes = [\r\n  {path:'/login', component: Login, exact: true},\r\n]","import React, { useContext } from 'react';\r\nimport MyButton from '../components/UI/button/MyButton';\r\nimport MyInput from '../components/UI/input/MyInput';\r\nimport { AuthContext } from '../context';\r\n\r\nconst Login = () => {\r\n  const {isAuth, setIsAuth} =useContext(AuthContext);\r\n\r\n  const login = event => {\r\n    event.preventDefault();\r\n    setIsAuth(true)\r\n    localStorage.setItem(\"auth\", 'true')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n       <h1>Страница для логина</h1>\r\n            <form onSubmit={login}>\r\n                <MyInput type=\"text\" placeholder=\"Введите логин\"/>\r\n                <MyInput type=\"password\" placeholder=\"Введите пароль\"/>\r\n                <MyButton>Войти</MyButton>\r\n            </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","import React, { useContext } from 'react';\r\nimport {  Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { publicRoutes, privateRoutes } from '../router';\r\nimport { AuthContext } from '../context';\r\nimport Loader from './UI/Loader/Loader';\r\n\r\n\r\nconst AppRouter = () => {\r\n  const {isAuth, isLoading} = useContext(AuthContext);\r\n\r\n  if(isLoading) {\r\n     return <Loader/>;\r\n  }\r\n\r\n  return (\r\n    \r\n   isAuth\r\n   ?\r\n   <Switch>\r\n       {privateRoutes.map(route =>\r\n           <Route\r\n               component={route.component}\r\n               path={route.path}\r\n               exact={route.exact}\r\n               key={route.path}\r\n           />\r\n       )}\r\n       <Redirect to='/posts'/>\r\n   </Switch>\r\n   :\r\n   <Switch>\r\n       {publicRoutes.map(route =>\r\n           <Route\r\n               component={route.component}\r\n               path={route.path}\r\n               exact={route.exact}\r\n               key={route.path}\r\n           />\r\n       )}\r\n       <Redirect to='/login'/>\r\n   </Switch>\r\n);\r\n};\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\nimport \"./styles/App.css\"\nimport { BrowserRouter } from \"react-router-dom\";\nimport Navbar from \"./components/UI/Navbar/Navbar\";\nimport AppRouter from \"./components/AppRouter\";\nimport { AuthContext } from \"./context\";\n\n\nfunction App() {\n  const[isAuth, setIsAuth] = useState(false);\n  const[isLoading, setLoading] = useState(true);\n\n\n  useEffect(() => {\n    if (localStorage.getItem('auth')) {\n      setIsAuth(true)\n    }\n    setLoading(false);\n  }, [])\n\n  return (\n    <AuthContext.Provider value={{\n        isAuth,\n        setIsAuth, \n        isLoading\n    }}>\n       <BrowserRouter>\n         <Navbar/>\n         <AppRouter/>\n       </BrowserRouter>\n    </AuthContext.Provider>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}